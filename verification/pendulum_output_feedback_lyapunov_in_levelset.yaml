general:
  conv_mode: matrix
  enable_incomplete_verification: false
  root_path: ${CONFIG_PATH}
  csv_name: specs/pendulum_output_feedback.csv
model:
  name: >-
    Customized("../neural_lyapunov_training/models.py", "create_pendulum_output_feedback_model",
    lyapunov_func="lyapunov.NeuralNetworkQuadraticLyapunov",
    lyapunov_parameters={"R_rows": 4, "eps": 0.01},
    controller_parameters={"nlayer": 4, "hidden_dim": 8, "clip_output":"clamp", "u_lo": torch.tensor([-1]), "u_up": torch.tensor([1])},
    observer_parameters={"fc_hidden_dim":[8, 8]},
    loss_parameters={"kappa": 0.0001, "fuse_dV": True},
    loss_func="lyapunov.LyapunovDerivativeDOFLossWithVBox")
  path: ${CONFIG_PATH}/../models/pendulum_output_feedback.pth
  input_shape: [-1, 4]
attack:
  pgd_order: skip
  pgd_restarts: 1000000
  pgd_steps: 1000
  pgd_alpha: 0.001
  pgd_alpha_scale: True
solver:
  batch_size: 2000000
  min_batch_size_ratio: 0.
  bound_prop_method: crown
bab:
  override_timeout: 1.e+8
  sort_domain_interval: -1
  branching:
    method: sb
    input_split:
      enable: True
      ibp_enhancement: True
      compare_with_old_bounds: True
      sb_coeff_thresh: 1.e-2
      sb_sum: True
      touch_zero_score: 0.1
      sort_descending: False
      adv_check: -1
