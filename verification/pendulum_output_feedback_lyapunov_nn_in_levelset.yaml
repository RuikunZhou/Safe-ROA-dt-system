general:
  conv_mode: matrix
  enable_incomplete_verification: false
  root_path: ${CONFIG_PATH}
  csv_name: specs/pendulum_output_feedback_nn.csv
model:
  name: >-
    Customized("../neural_lyapunov_training/models.py", "create_pendulum_output_feedback_model",
    lyapunov_parameters={"hidden_widths": [16,16,8], "R_rows": 2, "absolute_output": True, "eps": 0.01, "activation": torch.nn.LeakyReLU},
    controller_parameters={"nlayer": 4, "hidden_dim": 8, "clip_output":"clamp", "u_lo": torch.tensor([-1]), "u_up": torch.tensor([1])},
    observer_parameters={"fc_hidden_dim":[16, 16, 8, 8]},
    loss_parameters={"kappa": 0.0001},
    loss_func="lyapunov.LyapunovDerivativeDOFLossWithVBox")
  path: ${CONFIG_PATH}/../models/pendulum_output_feedback_nn.pth
  input_shape: [-1, 4]
attack:
  pgd_order: skip
solver:
  batch_size: 100000
  min_batch_size_ratio: 0.
  bound_prop_method: crown
bab:
  decision_thresh: -1.e-6
  override_timeout: 100000000
  branching:
    method: sb
    input_split:
      enable: True
      ibp_enhancement: True
      compare_with_old_bounds: True
      adv_check: -1
      sb_coeff_thresh: 0.001